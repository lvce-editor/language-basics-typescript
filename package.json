{
  "name": "builtin.language-basics-typescript",
  "version": "0.0.0-dev",
  "description": "",
  "main": "index.js",
  "type": "module",
  "scripts": {
    "test": "test-syntax-highlighting",
    "dev": "node ./node_modules/@lvce-editor/server/bin/server.js ./test/cases --only-extension=."
  },
  "keywords": [],
  "author": "",
  "license": "MIT",
  "devDependencies": {
    "@lvce-editor/package-extension": "^0.1.0",
    "@lvce-editor/server": "^0.23.0",
    "@lvce-editor/test-syntax-highlighting": "^0.2.1",
    "got": "^14.2.0",
    "prettier": "^2.8.8",
    "tar-fs": "^3.0.4",
    "typescript": "^5.3.3"
  },
  "prettier": {
    "semi": false,
    "singleQuote": true
  },
  "test-tokenize": {
    "skip": [
      "import-type-destructured",
      "comment-after-type",
      "object-multiple-properties",
      "key-string-any",
      "type-or-interface",
      "import-assertion",
      "import-type",
      "typescript-Abstracts",
      "typescript-constants",
      "typescript-forof",
      "typescript-readonly",
      "typescript-readonlyModifier",
      "typescript-bigint",
      "typescript-constType",
      "typescript-arrowInsideCall",
      "typescript-Issue66",
      "typescript-Issue88",
      "typescript-Issue193",
      "typescript-Issue384",
      "typescript-Issue391",
      "typescript-Issue396",
      "typescript-Issue433",
      "typescript-Issue486",
      "typescript-Issue538",
      "typescript-Issue559",
      "typescript-Issue566",
      "typescript-ArrowFunctionInsideTypeAssertion",
      "typescript-TsxSamples",
      "typescript-assertions",
      "typescript-awaited",
      "typescript-constTypeAssert",
      "typescript-constructorType",
      "typescript-enumMemberWithIntializer",
      "typescript-exportDeclarations",
      "typescript-genericTaggedTemplate",
      "typescript-importAssert",
      "typescript-importTypeOnly",
      "typescript-importTypes",
      "typescript-inferTypes",
      "typescript-issue534",
      "typescript-issue776",
      "typescript-issue806",
      "typescript-issue807",
      "typescript-issue807ts",
      "typescript-issue809",
      "typescript-jsxTagWithTypeArguments",
      "typescript-keyof",
      "typescript-mappedType",
      "typescript-modifierOperators",
      "typescript-multilineArrow",
      "typescript-multineTag",
      "typescript-namedTuples",
      "typescript-namespaceAndModule",
      "typescript-notMultilineArrow1",
      "typescript-notMultilineArrow2",
      "typescript-notMultilineArrow3",
      "typescript-numericAsType",
      "typescript-objectLiteralWithCast",
      "typescript-optionalChaining",
      "typescript-parameterBindingPattern",
      "typescript-partialTypeArguments",
      "typescript-pr48_noSemiColon",
      "typescript-pr557_namespacedJsx",
      "typescript-privateFields",
      "typescript-readonly",
      "typescript-readonlyModifier",
      "typescript-restAndSpreadExpression",
      "typescript-templateLiteralType",
      "typescript-typeofClass",
      "typescript-typeparameterDefault",
      "typescript-variableBindingPattern",
      "typescript-varianceAnnotations",
      "typescript-AsConstSatisfies",
      "typescript-constTypeParameter",
      "typescript-issue949",
      "typescript-issue951",
      "typescript-issue957",
      "types-node-globals.global",
      "types-node-globals",
      "types-node-http",
      "types-node-http2",
      "types-node-stream",
      "types-node-string_decoder",
      "types-node-crypto",
      "typescript-awaitUsing",
      "typescript-using",
      "type-assignment-to-function-with-parameters-missing-comma",
      "babel-parser-expression",
      "babel-parser-parse-error-standard-errors",
      "babel-parser-parser-expression",
      "babel-parser-plugins-flow-index",
      "babel-parser-plugins-typescript-index",
      "babel-parser-production-parameter",
      "babel-parser-scopeflags",
      "babel-parser-standard-errors",
      "babel-parser-util-production-parameter",
      "babel-parser-util-scopeflags"
    ]
  }
}
